{"version":3,"file":"static/js/212.767a5ad7.chunk.js","mappings":"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","sources":["components/PhoneForm/PhoneForm.styled.js","components/PhoneForm/PhoneForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledPhoneForm = styled.div`\n  .text {\n    text-align: center;\n    font-size: 36px;\n    text-decoration: underline;\n    text-decoration-style: double;\n  }\n\n  .text-white {\n    text-align: center;\n    font-size: 36px;\n    text-decoration: underline;\n    text-decoration-style: double;\n    color: white;\n  }\n\n  .form {\n    display: flex;\n    flex-direction: column;\n    width: 400px;\n  }\n\n  .label {\n    font-size: 14px;\n    line-height: 1.29;\n    letter-spacing: -0.04em;\n    text-transform: uppercase;\n    font-weight: 600;\n  }\n\n  .input {\n    width: 100%;\n    height: 30px;\n    margin-bottom: 14px;\n    padding: 14px 24px;\n    outline: 1px solid rgba(0, 0, 0, 0.3);\n    border-radius: 100px;\n    border: none;\n    transition: outline var(--duration-timing-func);\n    font-size: 20px;\n    line-height: 1.29;\n    letter-spacing: -0.04em;\n    color: black;\n  }\n\n  .title {\n    display: block;\n    margin-bottom: 10px;\n    font-size: 18px;\n    line-height: 1.17;\n    letter-spacing: 0.04em;\n  }\n\n  .btn {\n    display: block;\n    margin: auto;\n    min-width: 110px;\n    height: 40px;\n    padding: 5px 20px;\n    border: 1px solid grey;\n    border-radius: 10px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    letter-spacing: 0.04em;\n    cursor: pointer;\n    background-color: white;\n    color: black;\n\n    &:hover,\n    &:focus {\n      background-color: rgb(21, 184, 21);\n      color: white;\n      transition: background-color 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n        color 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectorContacts } from 'redux/contacts/selectors';\n\nimport { StyledPhoneForm } from './PhoneForm.styled';\n\nconst PhoneForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.name.value;\n    const number = event.currentTarget.elements.number.value;\n\n    const isNameExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isNameExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <StyledPhoneForm>\n      <h1 className=\"text\">\n        <span className=\"text-white\">Your </span>Phonebook\n      </h1>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label className=\"label\">\n          <span className=\"title\">Name</span>\n          <input\n            className=\"input\"\n            name=\"name\"\n            type=\"text\"\n            required\n            placeholder=\"Enter name\"\n          />\n          <span className=\"title\">Number</span>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            required\n            placeholder=\"Number\"\n            minLength=\"7\"\n            maxLength=\"12\"\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </StyledPhoneForm>\n  );\n};\n\nexport default PhoneForm;\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.div`\nwidth: 300px;\n\n.title {\n  font-size: 18px;\n    line-height: 1.29;\n    letter-spacing: -0.04em;\n    text-transform: uppercase;\n    font-weight: 600;\n}\n  .input {\n    width: 100%;\n    height: 20px;\n    margin-top: 8px;\n    margin-bottom: 14px;\n    padding: 10px 20px;\n    outline: 1px solid rgba(0, 0, 0, 0.3);\n    border-radius: 100px;\n    border: none;\n    transition: outline var(--duration-timing-func);\n    font-size: 20px;\n    line-height: 1.29;\n    letter-spacing: -0.04em;\n    color: black;\n  }\n    \n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectorfilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/sliceContacts';\n\nimport { StyledFilter } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectorfilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <StyledFilter>\n      <p className=\"title\">Find contacts by name:</p>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Search contacts\"\n          value={filter}\n          onChange={handleFilterChange}\n          className=\"input\"\n        />\n      </form>\n    </StyledFilter>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledContacts = styled.div`\n  width: 360px;\n\n  .item {\n    margin-bottom: 8px;\n    display: flex;\n    -webkit-box-pack: justify;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    align-items: center;\n  }\n\n  .btn_delete {\n    color: black;\n\n    &:hover,\n    &:focus {\n      background-color: red;\n      color: white;\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectorContactsError,\n  selectorContactsFilter,\n  selectorContactsIsLoading,\n} from 'redux/contacts/selectors';\nimport Loader from 'components/Loader/Loader';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { StyledContacts } from './Contacts.styled';\nimport { IconButton } from '@mui/material';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectorContactsIsLoading);\n  const error = useSelector(selectorContactsError);\n  const filteredContacts = useSelector(selectorContactsFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <StyledContacts>\n      <ul>\n        {filteredContacts.length > 0 ? (\n          filteredContacts.map(contact => (\n            <li key={contact.id} className=\"item\">\n              {contact.name}: {contact.number}\n              <IconButton\n                className=\"btn_delete\"\n                aria-label=\"delete\"\n                onClick={() => handleDeleteContact(contact.id)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </li>\n          ))\n        ) : (\n          <p>No contacts found</p>\n        )}\n      </ul>\n\n      {isLoading && <Loader />}\n      {error && <p>Oppsss Erorr</p>}\n    </StyledContacts>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background: linear-gradient(rgb(191 76 77), rgb(131 138 214));\n\n  .appstyled {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    flex-direction: column;\n    width: 800px;\n    padding-top: 15px;\n\n    margin: 0 auto;\n  }\n\n  .text {\n    text-align: center;\n    font-size: 36px;\n    text-decoration: underline;\n    text-decoration-style: double;\n  }\n`;\n","import PhoneForm from 'components/PhoneForm/PhoneForm';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\n\nimport { StyledContainer } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <StyledContainer>\n      <div className=\"appstyled\">\n        <PhoneForm />\n        <h2 className=\"text\">Contacts</h2>\n        <Filter />\n        <Contacts />\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledPhoneForm","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","contacts","useSelector","selectorContacts","_jsxs","children","className","_jsx","onSubmit","event","preventDefault","name","currentTarget","elements","value","number","some","contact","toLowerCase","alert","concat","newContact","addContact","reset","type","required","placeholder","minLength","maxLength","StyledFilter","filter","selectorfilter","onChange","_ref","target","setFilter","StyledContacts","isLoading","selectorContactsIsLoading","error","selectorContactsError","filteredContacts","selectorContactsFilter","useEffect","fetchContacts","length","map","IconButton","onClick","contactId","id","deleteContact","DeleteIcon","Loader","StyledContainer","PhoneForm","Filter","Contacts"],"sourceRoot":""}